D5P381-210324
<h2>《Recsys Research Project (8)》</h2>
2`3.9，Loretta告诉我春季学期可以给我25% RAship（半奖，工作时长、学费免额与工资都是全奖的一半），我想想这也好，少一点负担可以多做做其他事（比如在Vandy多待会）。3.16，710拉上709和Loretta开了个会，总结我的这学期、讨论我下学期的计划。
2`我提到上次和Susan的一对一取消了，Loretta强烈鼓励我找机会一对一，说“lab存在的原因就是Susan喜欢指导年轻学生”，最近和新录取学弟学妹聊天的我对此有些感触。710也鼓励我在和Susan的会议上多发言，说他经常发完言以后感觉自己说的好傻，这让我有些吃惊。
2`709评价我“reasonably smart”，反思了他在我入lab初期给予的指导，当时扔了一堆信息给我，让我不好消化；Keshav加入时他就更有经验了，让他先跑pipeline上手。是啊，我在想新人在初期是需要老员工花很多精力带的，之后再慢慢独立负责一件事。当时我在tx，mentor每天在我身上花的时间非常少，这也许是因为他们太忙加上我不会return，但就让我体验不太好。
1`3.24早上，大组里另外两个做EdTech的小组做了演示，一个是Khan Kids，一个是“一起作业”。17作业声称月活有2千万，比S2M多3 ~ 4个数量级，确实S2M这么点数据，太难设计实验了。
1`3.26开始做latents分析的工作。这个其实之前Rina做过一些，但当时做的软件很杂乱，不太方便跑新数据，我可能需要重做。（注：后来交给Keshav做了）709说他做了太多事，很多时候记不得自己干过什么。他最好花一天时间回想一下哪些事已经做过了。
1`709写了一篇notes，大致描述了需要用到的代码的功能。虽然这已经比之前好了，但还是忽略了很多细节，想到又要和709那没有任何注释的老代码打交道，真蛋疼。我真想抗议道，如果没有comments，我拒绝使用你的代码。
1`另外，我对lab的周报制度还是很不满，224n Project的经历再次验证了科研的工作不适合写周报，写周报是血汗工厂行为，做科研是需要自由的阅读、思考来获取灵感的。尤其是下周每项工作的计划还要精确到小时、每项任务要分解成最多4小时的子任务，真是令人窒息！！！时间管理不是这样做的好吗！你们lab还号称拥有世界领先的管理模式，真是扯淡。
1`3.29开始做内容过滤算法，709提议用线性回归；这个我们其实已经试过了，当时由于LR需要的训练集大小非常大（每个样本都是一百多个维度的特征，然后样本数量上百万），我们VM内存根本装不下。我的年度朋友圈里讲lab用的背景图片，就是1.22我俩一起debug这个问题的场景。最后解决办法是，一百多个特征我们只能留下几个，这样模型的表现显然不会好。
1`我提出了一个新方法：利用文章描述，用sentence embedding加k近邻来寻找相似文章，这次我的想法终于被采纳了。还好我周末看了点文章，自己思考了一会！
1`新模型可以继承torch.nn.Module，但这似乎是唯一能fit进已有pipeline的步骤了：DataLoader得重写（之前用的training数据里并没有加入每篇文章的描述），eval也得重写（之前的都是预测utility，现在的模型输出直接是推荐列表）。
1`即使是模型，也没有统一的定义，仅仅继承nn.Module还不够，若能搞一个base class，说清每个model应该继承哪些method（比如train、predict），这些method应该干啥，会更好。当然，现在赶进度的我只能先让代码勉强work完事，以后有空再提restructure代码的事情吧。
1`像那些成功的软件，都是有详细的文档和统一的接口的。以前我都理所当然地拿来用，现在我体会到了做到这些需要花多大功夫来设计。架构这东西是需要一个牛人来搭建的，合作者去使用或加入模块应该是一件轻松的事情，不需要管pipeline里其他的部分；但我现在就处于相反的境地，真的很麻烦。
1`模块化最重要的可能是要统一、明确每一步输入和输出的格式，需要abstraction，也就是分离behavior和implementation。
1`这种系统化设计虽然对后来人很有帮助，但对搭框架的人却可能是“吃力不讨好”的，因为会在短期内拖慢进程。像我们lab由于人员流动比较频繁，容易出现之前的同学扔下一堆翔山，坑后面同学的情况，反正也不需要负责任。
1`这应该是我继Manim.js之后第一次在实战中考虑软件架构设计。我之前实习里一半的内容都是数据分析，这方面的代码都是可以单独存在的，基本不需要协调各个模块，进行端到端的计算。
1`啊这篇日记写了好多抽象、哲学性的东西…而且有些是我自己总结出来的，以前似乎并没有人教过我其中一些概念。是我在瞎想、在不必要地把东西搞复杂吗？我觉得不是，对于现实中团队合作性质的软件工程，我觉得还有太多太多未知的技能需要我去探索。
1`3.31初步写了代码，3周前224n写过的代码直接用太方便了，想起夕小瑶在提高炼丹手速那篇文章里写过：
<blockquote>
为每种经典算法任务都积累一个重构的不错的完整、易用、灵活的project，这种project就是将来你完成其他相近project的热启动project。由于这个project是经过你的手重构的，所以二次上手成本和魔改成本会远低于你去找个外部的github repo。
</blockquote>
1`话说最近注意到YouTube手机版里，第一项推荐视频下面有个小问卷，先是让我评价喜不喜欢（1~5分），然后问为啥（放松、好笑、有用）。另外710写的一篇memo里，提到Freadom和Netflix场景的区别：Freadom里用户在每篇文章上停留的时间短。
（上篇：D5P379，下篇：D5P387）
